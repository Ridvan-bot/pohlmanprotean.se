@tailwind base;
@tailwind components;
@tailwind utilities;

/* You can add your custom styles here if needed */

body {
    @apply bg-gray-900 text-white; /* Set a dark gray background and white text */
}

/* Custom button styles */
.custom-button {
    @apply bg-gradient-to-r from-yellow-400 to-yellow-600 text-[#111] font-semibold py-2 px-4 h-12 rounded-md shadow-lg hover:from-yellow-500 hover:to-yellow-700 transition-colors duration-300 flex items-center justify-center w-full whitespace-nowrap; /* Added whitespace-nowrap */
}

/* Optional: Ensure buttons fit their container in a flex layout */
.button-container {
    @apply flex flex-row space-x-4 w-full max-w-xs; /* Adjust max width as needed */
}

html {
    scroll-behavior: smooth;
  }
  
  .card {
    width: 90%;
    max-width: 800px;
    height: auto;
    padding: 5px;
    border-radius: 1rem;
    overflow: hidden;
    position: relative;
    z-index: 1;
}

.card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px; /* Set the desired height for the top border */
    background: linear-gradient(to left, #f7ba2b 0%, #ea5358 100%);
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
    z-index: 2;
}

  
  .card-info {
    --color: #18181869;
    background: var(--color);
    display: flex;
    flex-direction: column; /* Stack items vertically */
    justify-content: center; /* Center vertically */
    align-items: center; /* Center horizontally */
    width: 100%;
    height: auto;
    overflow: hidden; /* Prevent overflow inside card-info */
    border-radius: 0.7rem;
    padding: 16px;
    word-wrap: break-word; /* Ensure text wraps within the card */
    box-sizing: border-box; /* Include padding in width calculation */
  }
  
  .gray-box {
    background-color: #222; /* Gray background */
    border-radius: 0.7rem; /* Rounded corners */
    color: white; /* Text color */
  }


  /* From Uiverse.io by codebykay101 */ 
  .container {
    flex: 1 1 200px;               /* Flex-grow, flex-shrink, flex-basis */
    max-width: 250px;              /* Set a max width for each item */
}


.container .glass {
  position: relative;
  width: 180px;
  height: 200px;
  background: linear-gradient(#fff2, transparent);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 25px 25px rgba(0, 0, 0, 0.25);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: 0.5s;
  border-radius: 10px;
  backdrop-filter: blur(10px);
  transform: rotate(calc(var(--r) * 1deg));
}

.container .glass::before {
  content: attr(data-text);
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 40px;
  background: rgba(255, 255, 255, 0.05);
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  margin: 10px;
}
.container .glass svg {
  font-size: 2.5em;
  fill: #fff;
}
.container .icon {
  max-width: 60%; /* Adjust this value as needed */
  max-height: 60%; /* Adjust this value as needed */
  object-fit: contain; /* Maintain aspect ratio and fit within the container */
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.container .text {
  margin-top: 10px; /* Space between image and text */
  color: #fff; /* Text color */
  text-align: center; /* Center the text */
}

.container-boxes {
  display: flex;                  /* Use Flexbox layout */
  justify-content: space-around;  /* Space items evenly */
  flex-wrap: wrap;               /* Allow items to wrap onto the next line */
  gap: 10px;                     /* Optional: space between items */
}


